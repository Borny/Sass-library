/////////////////////
// Container and row
/////////////////////
@mixin container-fixed {
    margin: 0 auto;
    @extend %clearfix;
}

//container
.container {
    @include container-fixed;
    @media (min-width: $screen-sm) {
        width: $screen-sm;
    }
    @media (min-width: $screen-md) {
        width: $screen-md;
    }
    @media (min-width: $screen-lg) {
        width: $screen-lg;
    }
}

//row
.row {
    @extend %clearfix;
}

/////////////////////
// Columns
/////////////////////

//@mixin make-grid-columns($i: 1, $list: ".col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}") {
//    @for $i from (1+1) through $columns {
//        $list: "#{$list}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}";
//    }
//    #{$list} {
//        position: relative;
//        float: left;
//        // Prevent columns from collapsing when empty
//        min-height: 1px;
//    }
//}
//
//@include make-grid-columns;
//
//@for $i from 1 through $columns {
//    .col-#{$i} {
//        width: percentage($i / $columns);
//        float: left;
//    }
//}

/////////////////////
// Generate classes
/////////////////////

@mixin make-grid-columns($class, $i: 1, $list: ".col-#{$class}-#{$i}") {
    @for $i from (1+1) through $columns {
        $list: "#{$list}, .col-#{$class}-#{$i}";
    }
    #{$list} {
        position: relative;
        float: left;
        // Prevent columns from collapsing when empty
        min-height: 1px;
    }
}

@mixin grid-calculate($index, $class) {
    .col-#{$class}-#{$index} {
        width: percentage($index / $columns);
    }
}

@mixin loop-grid-generation($columns, $class) {
    @for $i from 0 through $columns {
        @include grid-calculate($i, $class);
    }
}

@mixin create-grid($class) {
    @include loop-grid-generation($columns, $class);
}

@mixin make-grid($class) {
    @include make-grid-columns($class);
    @include create-grid($class);
}

@include make-grid(sm);

